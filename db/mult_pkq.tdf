--lpm_mult CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEDICATED_MULTIPLIER_CIRCUITRY="NO" DEVICE_FAMILY="Stratix II" DSP_BLOCK_BALANCING="Auto" LPM_REPRESENTATION="SIGNED" LPM_WIDTHA=32 LPM_WIDTHB=32 LPM_WIDTHP=32 MAXIMIZE_SPEED=5 dataa datab result CARRY_CHAIN="MANUAL" CARRY_CHAIN_LENGTH=48
--VERSION_BEGIN 9.0 cbx_cycloneii 2008:05:19:10:57:37:SJ cbx_lpm_add_sub 2008:12:09:22:11:50:SJ cbx_lpm_mult 2008:09:30:18:36:56:SJ cbx_mgl 2009:01:29:16:12:07:SJ cbx_padd 2008:09:04:11:11:31:SJ cbx_stratix 2008:09:18:16:08:35:SJ cbx_stratixii 2008:11:14:16:08:42:SJ cbx_util_mgl 2008:11:21:14:58:47:SJ  VERSION_END


-- Copyright (C) 1991-2009 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.


FUNCTION soft (in)
RETURNS ( out);

--synthesis_resources = lut 1106 
SUBDESIGN mult_pkq
( 
	dataa[31..0]	:	input;
	datab[31..0]	:	input;
	result[31..0]	:	output;
) 
VARIABLE
	add12_result[47..0]	:	WIRE;
	add17_result[39..0]	:	WIRE;
	add2_result[62..0]	:	WIRE;
	add22_result[31..0]	:	WIRE;
	add27_result[23..0]	:	WIRE;
	add32_result[15..0]	:	WIRE;
	add37_result[9..0]	:	WIRE;
	add7_result[55..0]	:	WIRE;
	sum_adder1aa_0_dataa[32..0]	:	WIRE;
	sum_adder1aa_0_datab[32..0]	:	WIRE;
	sum_adder1aa_0_result[32..0]	:	WIRE;
	sum_adder1aa_1_dataa[32..0]	:	WIRE;
	sum_adder1aa_1_datab[32..0]	:	WIRE;
	sum_adder1aa_1_result[32..0]	:	WIRE;
	sum_adder1aa_2_dataa[32..0]	:	WIRE;
	sum_adder1aa_2_datab[32..0]	:	WIRE;
	sum_adder1aa_2_result[32..0]	:	WIRE;
	sum_adder1aa_3_dataa[32..0]	:	WIRE;
	sum_adder1aa_3_datab[32..0]	:	WIRE;
	sum_adder1aa_3_result[32..0]	:	WIRE;
	sum_adder1aa_4_dataa[32..0]	:	WIRE;
	sum_adder1aa_4_datab[32..0]	:	WIRE;
	sum_adder1aa_4_result[32..0]	:	WIRE;
	sum_adder1aa_5_dataa[32..0]	:	WIRE;
	sum_adder1aa_5_datab[32..0]	:	WIRE;
	sum_adder1aa_5_result[32..0]	:	WIRE;
	sum_adder1aa_6_dataa[32..0]	:	WIRE;
	sum_adder1aa_6_datab[32..0]	:	WIRE;
	sum_adder1aa_6_result[32..0]	:	WIRE;
	sum_adder1aa_7_dataa[32..0]	:	WIRE;
	sum_adder1aa_7_datab[32..0]	:	WIRE;
	sum_adder1aa_7_result[32..0]	:	WIRE;
	sum_adder1aa_8_dataa[32..0]	:	WIRE;
	sum_adder1aa_8_datab[32..0]	:	WIRE;
	sum_adder1aa_8_result[32..0]	:	WIRE;
	sum_adder1aa_9_dataa[32..0]	:	WIRE;
	sum_adder1aa_9_datab[32..0]	:	WIRE;
	sum_adder1aa_9_result[32..0]	:	WIRE;
	sum_adder1aa_10_dataa[32..0]	:	WIRE;
	sum_adder1aa_10_datab[32..0]	:	WIRE;
	sum_adder1aa_10_result[32..0]	:	WIRE;
	sum_adder1aa_11_dataa[32..0]	:	WIRE;
	sum_adder1aa_11_datab[32..0]	:	WIRE;
	sum_adder1aa_11_result[32..0]	:	WIRE;
	sum_adder1aa_12_dataa[32..0]	:	WIRE;
	sum_adder1aa_12_datab[32..0]	:	WIRE;
	sum_adder1aa_12_result[32..0]	:	WIRE;
	sum_adder1aa_13_dataa[32..0]	:	WIRE;
	sum_adder1aa_13_datab[32..0]	:	WIRE;
	sum_adder1aa_13_result[32..0]	:	WIRE;
	sum_adder1aa_14_dataa[32..0]	:	WIRE;
	sum_adder1aa_14_datab[32..0]	:	WIRE;
	sum_adder1aa_14_result[32..0]	:	WIRE;
	sum_adder1aa_15_result_int[33..0]	:	WIRE;
	sum_adder1aa_15_cin	:	WIRE;
	sum_adder1aa_15_dataa[32..0]	:	WIRE;
	sum_adder1aa_15_datab[32..0]	:	WIRE;
	sum_adder1aa_15_result[32..0]	:	WIRE;
	sft10a[55..0] : soft;
	sft11a[55..0] : soft;
	sft13a[47..0] : soft;
	sft14a[47..0] : soft;
	sft15a[47..0] : soft;
	sft16a[47..0] : soft;
	sft18a[39..0] : soft;
	sft19a[39..0] : soft;
	sft20a[39..0] : soft;
	sft21a[39..0] : soft;
	sft23a[31..0] : soft;
	sft24a[31..0] : soft;
	sft25a[31..0] : soft;
	sft26a[31..0] : soft;
	sft28a[23..0] : soft;
	sft29a[23..0] : soft;
	sft30a[23..0] : soft;
	sft31a[23..0] : soft;
	sft33a[15..0] : soft;
	sft34a[15..0] : soft;
	sft35a[15..0] : soft;
	sft36a[15..0] : soft;
	sft38a[9..0] : soft;
	sft39a[9..0] : soft;
	sft3a[62..0] : soft;
	sft40a[9..0] : soft;
	sft41a[9..0] : soft;
	sft4a[62..0] : soft;
	sft5a[62..0] : soft;
	sft6a[62..0] : soft;
	sft8a[55..0] : soft;
	sft9a[55..0] : soft;
	dataa_node[31..0]	: WIRE;
	datab_node[31..0]	: WIRE;
	final_result_node[63..0]	: WIRE;
	w1159w	: WIRE;
	w1191w	: WIRE;
	w2342w[64..0]	: WIRE;
	w_decoder_node9w[1023..0]	: WIRE;
	w_le_datab_node8w[31..0]	: WIRE;
	w_sum_node10w[543..0]	: WIRE;

BEGIN 
	add12_result[] = sft13a[].out + sft14a[].out + sft15a[].out;
	add17_result[] = sft18a[].out + sft19a[].out + sft20a[].out;
	add2_result[] = sft3a[].out + sft4a[].out + sft5a[].out;
	add22_result[] = sft23a[].out + sft24a[].out + sft25a[].out;
	add27_result[] = sft28a[].out + sft29a[].out + sft30a[].out;
	add32_result[] = sft33a[].out + sft34a[].out + sft35a[].out;
	add37_result[] = sft38a[].out + sft39a[].out + sft40a[].out;
	add7_result[] = sft8a[].out + sft9a[].out + sft10a[].out;
	sum_adder1aa_0_result[] = sum_adder1aa_0_dataa[] + sum_adder1aa_0_datab[];
	sum_adder1aa_0_dataa[] = ( w_decoder_node9w[63..63], w_decoder_node9w[63..32]);
	sum_adder1aa_0_datab[] = ( w_decoder_node9w[31..31], w_decoder_node9w[31..31], w_decoder_node9w[31..1]);
	sum_adder1aa_1_result[] = sum_adder1aa_1_dataa[] + sum_adder1aa_1_datab[];
	sum_adder1aa_1_dataa[] = ( w_decoder_node9w[127..127], w_decoder_node9w[127..96]);
	sum_adder1aa_1_datab[] = ( w_decoder_node9w[95..95], w_decoder_node9w[95..95], w_decoder_node9w[95..65]);
	sum_adder1aa_2_result[] = sum_adder1aa_2_dataa[] + sum_adder1aa_2_datab[];
	sum_adder1aa_2_dataa[] = ( w_decoder_node9w[191..191], w_decoder_node9w[191..160]);
	sum_adder1aa_2_datab[] = ( w_decoder_node9w[159..159], w_decoder_node9w[159..159], w_decoder_node9w[159..129]);
	sum_adder1aa_3_result[] = sum_adder1aa_3_dataa[] + sum_adder1aa_3_datab[];
	sum_adder1aa_3_dataa[] = ( w_decoder_node9w[255..255], w_decoder_node9w[255..224]);
	sum_adder1aa_3_datab[] = ( w_decoder_node9w[223..223], w_decoder_node9w[223..223], w_decoder_node9w[223..193]);
	sum_adder1aa_4_result[] = sum_adder1aa_4_dataa[] + sum_adder1aa_4_datab[];
	sum_adder1aa_4_dataa[] = ( w_decoder_node9w[319..319], w_decoder_node9w[319..288]);
	sum_adder1aa_4_datab[] = ( w_decoder_node9w[287..287], w_decoder_node9w[287..287], w_decoder_node9w[287..257]);
	sum_adder1aa_5_result[] = sum_adder1aa_5_dataa[] + sum_adder1aa_5_datab[];
	sum_adder1aa_5_dataa[] = ( w_decoder_node9w[383..383], w_decoder_node9w[383..352]);
	sum_adder1aa_5_datab[] = ( w_decoder_node9w[351..351], w_decoder_node9w[351..351], w_decoder_node9w[351..321]);
	sum_adder1aa_6_result[] = sum_adder1aa_6_dataa[] + sum_adder1aa_6_datab[];
	sum_adder1aa_6_dataa[] = ( w_decoder_node9w[447..447], w_decoder_node9w[447..416]);
	sum_adder1aa_6_datab[] = ( w_decoder_node9w[415..415], w_decoder_node9w[415..415], w_decoder_node9w[415..385]);
	sum_adder1aa_7_result[] = sum_adder1aa_7_dataa[] + sum_adder1aa_7_datab[];
	sum_adder1aa_7_dataa[] = ( w_decoder_node9w[511..511], w_decoder_node9w[511..480]);
	sum_adder1aa_7_datab[] = ( w_decoder_node9w[479..479], w_decoder_node9w[479..479], w_decoder_node9w[479..449]);
	sum_adder1aa_8_result[] = sum_adder1aa_8_dataa[] + sum_adder1aa_8_datab[];
	sum_adder1aa_8_dataa[] = ( w_decoder_node9w[575..575], w_decoder_node9w[575..544]);
	sum_adder1aa_8_datab[] = ( w_decoder_node9w[543..543], w_decoder_node9w[543..543], w_decoder_node9w[543..513]);
	sum_adder1aa_9_result[] = sum_adder1aa_9_dataa[] + sum_adder1aa_9_datab[];
	sum_adder1aa_9_dataa[] = ( w_decoder_node9w[639..639], w_decoder_node9w[639..608]);
	sum_adder1aa_9_datab[] = ( w_decoder_node9w[607..607], w_decoder_node9w[607..607], w_decoder_node9w[607..577]);
	sum_adder1aa_10_result[] = sum_adder1aa_10_dataa[] + sum_adder1aa_10_datab[];
	sum_adder1aa_10_dataa[] = ( w_decoder_node9w[703..703], w_decoder_node9w[703..672]);
	sum_adder1aa_10_datab[] = ( w_decoder_node9w[671..671], w_decoder_node9w[671..671], w_decoder_node9w[671..641]);
	sum_adder1aa_11_result[] = sum_adder1aa_11_dataa[] + sum_adder1aa_11_datab[];
	sum_adder1aa_11_dataa[] = ( w_decoder_node9w[767..767], w_decoder_node9w[767..736]);
	sum_adder1aa_11_datab[] = ( w_decoder_node9w[735..735], w_decoder_node9w[735..735], w_decoder_node9w[735..705]);
	sum_adder1aa_12_result[] = sum_adder1aa_12_dataa[] + sum_adder1aa_12_datab[];
	sum_adder1aa_12_dataa[] = ( w_decoder_node9w[831..831], w_decoder_node9w[831..800]);
	sum_adder1aa_12_datab[] = ( w_decoder_node9w[799..799], w_decoder_node9w[799..799], w_decoder_node9w[799..769]);
	sum_adder1aa_13_result[] = sum_adder1aa_13_dataa[] + sum_adder1aa_13_datab[];
	sum_adder1aa_13_dataa[] = ( w_decoder_node9w[895..895], w_decoder_node9w[895..864]);
	sum_adder1aa_13_datab[] = ( w_decoder_node9w[863..863], w_decoder_node9w[863..863], w_decoder_node9w[863..833]);
	sum_adder1aa_14_result[] = sum_adder1aa_14_dataa[] + sum_adder1aa_14_datab[];
	sum_adder1aa_14_dataa[] = ( w_decoder_node9w[959..959], w_decoder_node9w[959..928]);
	sum_adder1aa_14_datab[] = ( w_decoder_node9w[927..927], w_decoder_node9w[927..927], w_decoder_node9w[927..897]);
	sum_adder1aa_15_result_int[] = (sum_adder1aa_15_dataa[], sum_adder1aa_15_cin) + (sum_adder1aa_15_datab[], sum_adder1aa_15_cin);
	sum_adder1aa_15_result[] = sum_adder1aa_15_result_int[33..1];
	sum_adder1aa_15_cin = B"1";
	sum_adder1aa_15_dataa[] = ( (! w_decoder_node9w[1023..1023]), (! w_decoder_node9w[1023..992]));
	sum_adder1aa_15_datab[] = ( w_decoder_node9w[991..991], w_decoder_node9w[991..991], w_decoder_node9w[991..961]);
	sft10a[].in = ( w1191w, ( w1191w, ( w1191w, ( w1191w, ( (! w_sum_node10w[441..441]), ( w1159w, ( w_sum_node10w[535..535], ( w_sum_node10w[534..534], ( w_sum_node10w[501..501], ( w_sum_node10w[500..500], ( w_sum_node10w[467..467], ( w_sum_node10w[466..466], ( sft26a[31..31].out, ( sft26a[30..30].out, ( sft26a[29..29].out, ( sft26a[28..28].out, ( sft26a[27..27].out, ( sft26a[26..26].out, ( sft26a[25..25].out, ( sft26a[24..24].out, ( sft26a[23..23].out, ( sft26a[22..22].out, ( sft26a[21..21].out, ( sft26a[20..20].out, ( sft26a[19..19].out, ( sft26a[18..18].out, ( sft26a[17..17].out, ( sft31a[12..12].out, ( sft31a[11..11].out, ( sft31a[10..10].out, ( sft31a[9..9].out, ( sft31a[8..8].out, ( sft26a[11..11].out, ( sft26a[10..10].out, ( sft26a[9..9].out, ( sft26a[8..8].out, ( sft26a[7..7].out, ( sft26a[6..6].out, ( sft26a[5..5].out, ( sft26a[4..4].out, ( sft26a[3..3].out, ( sft26a[2..2].out, ( sft26a[1..1].out, ( sft26a[0..0].out, ( w_sum_node10w[145..145], ( w_sum_node10w[144..144], ( w_sum_node10w[143..143], ( w_sum_node10w[142..142], ( w_sum_node10w[141..141], ( w_sum_node10w[140..140], ( w_sum_node10w[139..139], ( w_sum_node10w[138..138], ( w_sum_node10w[137..137], ( w_sum_node10w[136..136], ( w1191w, w1191w)))))))))))))))))))))))))))))))))))))))))))))))))))))));
	sft11a[].in = add7_result[];
	sft13a[].in = ( w1191w, ( w_sum_node10w[440..440], ( (! w_sum_node10w[407..407]), ( w1159w, ( w_sum_node10w[533..533], ( w_sum_node10w[532..532], ( w_sum_node10w[499..499], ( w_sum_node10w[498..498], ( w_sum_node10w[465..465], ( w_sum_node10w[464..464], ( w_sum_node10w[431..431], ( w_sum_node10w[430..430], ( w_sum_node10w[429..429], ( w_sum_node10w[428..428], ( w_sum_node10w[395..395], ( w_sum_node10w[362..362], ( w_sum_node10w[329..329], ( w_sum_node10w[328..328], ( w_sum_node10w[295..295], ( w_sum_node10w[390..390], ( w_sum_node10w[357..357], ( w1159w, ( w_sum_node10w[515..515], ( w_sum_node10w[226..226], ( w_sum_node10w[193..193], ( w_sum_node10w[192..192], ( w_sum_node10w[191..191], ( w_sum_node10w[190..190], ( w_sum_node10w[189..189], ( w_sum_node10w[188..188], ( w_sum_node10w[187..187], ( w_sum_node10w[186..186], ( w_sum_node10w[185..185], ( w_sum_node10w[184..184], ( w_sum_node10w[183..183], ( w_sum_node10w[182..182], ( w_sum_node10w[181..181], ( w_sum_node10w[180..180], ( w_sum_node10w[179..179], ( w_sum_node10w[178..178], ( w_sum_node10w[177..177], ( w_sum_node10w[176..176], ( w_sum_node10w[175..175], ( w_sum_node10w[174..174], ( w_sum_node10w[173..173], ( w_sum_node10w[172..172], ( w_sum_node10w[171..170])))))))))))))))))))))))))))))))))))))))))))))));
	sft14a[].in = ( w1191w, ( w1191w, ( w1191w, ( w_sum_node10w[438..438], ( w_sum_node10w[405..405], ( w_sum_node10w[404..404], ( w_sum_node10w[371..371], ( w_sum_node10w[370..370], ( w_sum_node10w[337..337], ( w_sum_node10w[336..336], ( w_sum_node10w[303..303], ( w_sum_node10w[302..302], ( w_sum_node10w[269..269], ( w_sum_node10w[268..268], ( w_sum_node10w[235..235], ( w_sum_node10w[234..234], ( w_sum_node10w[201..201], ( w_sum_node10w[200..200], ( w_sum_node10w[167..167], ( sft31a[16..16].out, ( sft31a[15..15].out, ( sft31a[14..14].out, ( sft31a[13..13].out, ( w_sum_node10w[98..98], ( w_sum_node10w[65..65], ( w_sum_node10w[64..64], ( w_sum_node10w[63..63], ( w_sum_node10w[62..62], ( w_sum_node10w[61..61], ( w_sum_node10w[60..60], ( w_sum_node10w[59..59], ( w_sum_node10w[58..58], ( w_sum_node10w[57..57], ( w_sum_node10w[56..56], ( w_sum_node10w[55..55], ( w_sum_node10w[54..54], ( w_sum_node10w[53..53], ( w_sum_node10w[52..52], ( w_sum_node10w[51..51], ( w_sum_node10w[50..50], ( w_sum_node10w[49..49], ( w_sum_node10w[48..48], ( w_sum_node10w[47..47], ( w_sum_node10w[46..46], ( w_sum_node10w[45..45], ( w_sum_node10w[44..44], ( w_sum_node10w[43..42])))))))))))))))))))))))))))))))))))))))))))))));
	sft15a[].in = ( w1191w, ( w1191w, ( w1191w, ( w1191w, ( (! w_sum_node10w[373..373]), ( w1159w, ( w_sum_node10w[531..531], ( w_sum_node10w[530..530], ( w_sum_node10w[497..497], ( w_sum_node10w[496..496], ( w_sum_node10w[463..463], ( w_sum_node10w[462..462], ( sft31a[23..23].out, ( sft31a[22..22].out, ( sft31a[21..21].out, ( sft31a[20..20].out, ( sft31a[19..19].out, ( sft31a[18..18].out, ( sft31a[17..17].out, ( sft36a[12..12].out, ( sft41a[7..7].out, ( sft36a[10..10].out, ( sft41a[5..5].out, ( sft36a[8..8].out, ( sft36a[7..7].out, ( sft36a[6..6].out, ( sft36a[5..5].out, ( sft36a[4..4].out, ( sft31a[7..7].out, ( sft31a[6..6].out, ( sft31a[5..5].out, ( sft31a[4..4].out, ( sft31a[3..3].out, ( sft31a[2..2].out, ( sft31a[1..1].out, ( sft31a[0..0].out, ( w_sum_node10w[213..213], ( w_sum_node10w[212..212], ( w_sum_node10w[211..211], ( w_sum_node10w[210..210], ( w_sum_node10w[209..209], ( w_sum_node10w[208..208], ( w_sum_node10w[207..207], ( w_sum_node10w[206..206], ( w_sum_node10w[205..205], ( w_sum_node10w[204..204], ( w1191w, w1191w)))))))))))))))))))))))))))))))))))))))))))))));
	sft16a[].in = add12_result[];
	sft18a[].in = ( w1191w, ( w_sum_node10w[372..372], ( (! w_sum_node10w[339..339]), ( w1159w, ( w_sum_node10w[529..529], ( w_sum_node10w[528..528], ( w_sum_node10w[495..495], ( w_sum_node10w[494..494], ( w_sum_node10w[461..461], ( w_sum_node10w[460..460], ( w_sum_node10w[427..427], ( w_sum_node10w[426..426], ( w_sum_node10w[425..425], ( w_sum_node10w[424..424], ( w_sum_node10w[391..391], ( w_sum_node10w[358..358], ( w_sum_node10w[325..325], ( w_sum_node10w[324..324], ( w_sum_node10w[291..291], ( w_sum_node10w[290..290], ( w_sum_node10w[257..257], ( w_sum_node10w[256..256], ( w_sum_node10w[255..255], ( w_sum_node10w[254..254], ( w_sum_node10w[253..253], ( w_sum_node10w[252..252], ( w_sum_node10w[251..251], ( w_sum_node10w[250..250], ( w_sum_node10w[249..249], ( w_sum_node10w[248..248], ( w_sum_node10w[247..247], ( w_sum_node10w[246..246], ( w_sum_node10w[245..245], ( w_sum_node10w[244..244], ( w_sum_node10w[243..243], ( w_sum_node10w[242..242], ( w_sum_node10w[241..241], ( w_sum_node10w[240..240], ( w_sum_node10w[239..238])))))))))))))))))))))))))))))))))))))));
	sft19a[].in = ( w1191w, ( w1191w, ( w1191w, ( w_sum_node10w[338..338], ( (! w_sum_node10w[305..305]), ( w_sum_node10w[304..304], ( (! w_sum_node10w[271..271]), ( w_sum_node10w[270..270], ( (! w_sum_node10w[237..237]), ( w_sum_node10w[236..236], ( (! w_sum_node10w[203..203]), ( w_sum_node10w[202..202], ( (! w_sum_node10w[169..169]), ( w_sum_node10w[168..168], ( sft36a[13..13].out, ( w_sum_node10w[134..134], ( (! w_sum_node10w[101..101]), ( w_sum_node10w[100..100], ( (! w_sum_node10w[67..67]), ( w_sum_node10w[66..66], ( (! w_sum_node10w[33..33]), ( w_sum_node10w[32..32], ( w_sum_node10w[31..31], ( w_sum_node10w[30..30], ( w_sum_node10w[29..29], ( w_sum_node10w[28..28], ( w_sum_node10w[27..27], ( w_sum_node10w[26..26], ( w_sum_node10w[25..25], ( w_sum_node10w[24..24], ( w_sum_node10w[23..23], ( w_sum_node10w[22..22], ( w_sum_node10w[21..21], ( w_sum_node10w[20..20], ( w_sum_node10w[19..19], ( w_sum_node10w[18..18], ( w_sum_node10w[17..17], ( w_sum_node10w[16..16], ( w_sum_node10w[15..14])))))))))))))))))))))))))))))))))))))));
	sft20a[].in = ( w1191w, ( w1191w, ( w1191w, ( w1191w, ( w_sum_node10w[401..401], ( w1159w, ( w_sum_node10w[527..527], ( w_sum_node10w[526..526], ( w_sum_node10w[493..493], ( w_sum_node10w[492..492], ( w_sum_node10w[459..459], ( w_sum_node10w[458..458], ( sft36a[15..15].out, ( sft36a[14..14].out, ( sft41a[9..9].out, ( sft41a[8..8].out, ( sft36a[11..11].out, ( sft41a[6..6].out, ( sft36a[9..9].out, ( sft41a[4..4].out, ( sft41a[3..3].out, ( sft41a[2..2].out, ( sft41a[1..1].out, ( sft41a[0..0].out, ( sft36a[3..3].out, ( sft36a[2..2].out, ( sft36a[1..1].out, ( sft36a[0..0].out, ( w_sum_node10w[281..281], ( w_sum_node10w[280..280], ( w_sum_node10w[279..279], ( w_sum_node10w[278..278], ( w_sum_node10w[277..277], ( w_sum_node10w[276..276], ( w_sum_node10w[275..275], ( w_sum_node10w[274..274], ( w_sum_node10w[273..273], ( w_sum_node10w[272..272], ( w1191w, w1191w)))))))))))))))))))))))))))))))))))))));
	sft21a[].in = add17_result[];
	sft23a[].in = ( w1191w, ( w_sum_node10w[400..400], ( w_sum_node10w[367..367], ( w1159w, ( w_sum_node10w[525..525], ( w_sum_node10w[524..524], ( w_sum_node10w[491..491], ( w_sum_node10w[490..490], ( w_sum_node10w[457..457], ( w_sum_node10w[456..456], ( w_sum_node10w[423..423], ( w_sum_node10w[422..422], ( w_sum_node10w[389..389], ( w_sum_node10w[388..388], ( w_sum_node10w[355..355], ( w_sum_node10w[354..354], ( w_sum_node10w[321..321], ( w_sum_node10w[320..320], ( w_sum_node10w[319..319], ( w_sum_node10w[318..318], ( w_sum_node10w[317..317], ( w_sum_node10w[316..316], ( w_sum_node10w[315..315], ( w_sum_node10w[314..314], ( w_sum_node10w[313..313], ( w_sum_node10w[312..312], ( w_sum_node10w[311..311], ( w_sum_node10w[310..310], ( w_sum_node10w[309..309], ( w_sum_node10w[308..308], ( w_sum_node10w[307..306])))))))))))))))))))))))))))))));
	sft24a[].in = ( w1191w, ( w1191w, ( w1191w, ( w_sum_node10w[398..398], ( w_sum_node10w[365..365], ( w_sum_node10w[364..364], ( w_sum_node10w[331..331], ( w_sum_node10w[330..330], ( w_sum_node10w[297..297], ( w_sum_node10w[296..296], ( w_sum_node10w[263..263], ( w_sum_node10w[262..262], ( w_sum_node10w[229..229], ( w_sum_node10w[228..228], ( w_sum_node10w[195..195], ( w_sum_node10w[194..194], ( w_sum_node10w[161..161], ( w_sum_node10w[160..160], ( w_sum_node10w[159..159], ( w_sum_node10w[158..158], ( w_sum_node10w[157..157], ( w_sum_node10w[156..156], ( w_sum_node10w[155..155], ( w_sum_node10w[154..154], ( w_sum_node10w[153..153], ( w_sum_node10w[152..152], ( w_sum_node10w[151..151], ( w_sum_node10w[150..150], ( w_sum_node10w[149..149], ( w_sum_node10w[148..148], ( w_sum_node10w[147..146])))))))))))))))))))))))))))))));
	sft25a[].in = ( w1191w, ( w1191w, ( w1191w, ( w1191w, ( w_sum_node10w[397..397], ( w1159w, ( w_sum_node10w[523..523], ( w_sum_node10w[522..522], ( w_sum_node10w[489..489], ( w_sum_node10w[488..488], ( w_sum_node10w[455..455], ( w_sum_node10w[454..454], ( w_sum_node10w[421..421], ( w_sum_node10w[420..420], ( w_sum_node10w[387..387], ( w_sum_node10w[386..386], ( w_sum_node10w[353..353], ( w_sum_node10w[352..352], ( w_sum_node10w[351..351], ( w_sum_node10w[350..350], ( w_sum_node10w[349..349], ( w_sum_node10w[348..348], ( w_sum_node10w[347..347], ( w_sum_node10w[346..346], ( w_sum_node10w[345..345], ( w_sum_node10w[344..344], ( w_sum_node10w[343..343], ( w_sum_node10w[342..342], ( w_sum_node10w[341..341], ( w_sum_node10w[340..340], ( w1191w, w1191w)))))))))))))))))))))))))))))));
	sft26a[].in = add22_result[];
	sft28a[].in = ( w1191w, ( w_sum_node10w[396..396], ( w_sum_node10w[363..363], ( w1159w, ( w_sum_node10w[521..521], ( w_sum_node10w[520..520], ( w_sum_node10w[487..487], ( w_sum_node10w[486..486], ( w_sum_node10w[453..453], ( w_sum_node10w[452..452], ( w_sum_node10w[419..419], ( w1159w, ( w_sum_node10w[513..513], ( w_sum_node10w[512..512], ( w_sum_node10w[511..511], ( w_sum_node10w[510..510], ( w_sum_node10w[381..381], ( w_sum_node10w[380..380], ( w_sum_node10w[379..379], ( w_sum_node10w[378..378], ( w_sum_node10w[377..377], ( w_sum_node10w[376..376], ( w_sum_node10w[375..374])))))))))))))))))))))));
	sft29a[].in = ( w1191w, ( w1191w, ( w1191w, ( w_sum_node10w[394..394], ( w_sum_node10w[361..361], ( w_sum_node10w[360..360], ( w_sum_node10w[327..327], ( w_sum_node10w[326..326], ( w_sum_node10w[293..293], ( w_sum_node10w[292..292], ( w_sum_node10w[259..259], ( w_sum_node10w[130..130], ( w_sum_node10w[97..97], ( w_sum_node10w[96..96], ( w_sum_node10w[95..95], ( w_sum_node10w[94..94], ( w_sum_node10w[221..221], ( w_sum_node10w[220..220], ( w_sum_node10w[219..219], ( w_sum_node10w[218..218], ( w_sum_node10w[217..217], ( w_sum_node10w[216..216], ( w_sum_node10w[215..214])))))))))))))))))))))));
	sft30a[].in = ( w1191w, ( w1191w, ( w1191w, ( w1191w, ( w_sum_node10w[393..393], ( w1159w, ( w_sum_node10w[519..519], ( w_sum_node10w[518..518], ( w_sum_node10w[485..485], ( w_sum_node10w[484..484], ( w_sum_node10w[451..451], ( w_sum_node10w[514..514], ( w1159w, ( w_sum_node10w[480..480], ( w_sum_node10w[479..479], ( w_sum_node10w[478..478], ( w_sum_node10w[413..413], ( w_sum_node10w[412..412], ( w_sum_node10w[411..411], ( w_sum_node10w[410..410], ( w_sum_node10w[409..409], ( w_sum_node10w[408..408], ( w1191w, w1191w)))))))))))))))))))))));
	sft31a[].in = add27_result[];
	sft33a[].in = ( w1191w, ( w_sum_node10w[392..392], ( w_sum_node10w[359..359], ( w_sum_node10w[294..294], ( w1191w, ( w_sum_node10w[260..260], ( w_sum_node10w[483..483], ( w_sum_node10w[418..418], ( w_sum_node10w[385..385], ( w_sum_node10w[384..384], ( w_sum_node10w[383..383], ( w_sum_node10w[382..382], ( w_sum_node10w[445..445], ( w_sum_node10w[444..444], ( w_sum_node10w[443..442])))))))))))))));
	sft34a[].in = ( w1191w, ( w1191w, ( (! w_sum_node10w[135..135]), ( w_sum_node10w[166..166], ( w1191w, ( w_sum_node10w[132..132], ( w1191w, ( w_sum_node10w[258..258], ( w_sum_node10w[225..225], ( w_sum_node10w[224..224], ( w_sum_node10w[223..223], ( w_sum_node10w[222..222], ( w_sum_node10w[285..285], ( w_sum_node10w[284..284], ( w_sum_node10w[283..282])))))))))))))));
	sft35a[].in = ( w1191w, ( w1191w, ( w1191w, ( w1159w, ( w1191w, ( w_sum_node10w[356..356], ( w1191w, ( w_sum_node10w[450..450], ( w_sum_node10w[417..417], ( w_sum_node10w[416..416], ( w_sum_node10w[415..415], ( w_sum_node10w[414..414], ( w_sum_node10w[477..477], ( w_sum_node10w[476..476], ( w1191w, w1191w)))))))))))))));
	sft36a[].in = add32_result[];
	sft38a[].in = ( w1191w, ( w1191w, ( w_sum_node10w[261..261], ( w_sum_node10w[516..516], ( w_sum_node10w[227..227], ( w_sum_node10w[482..482], ( w_sum_node10w[449..449], ( w_sum_node10w[448..448], ( w_sum_node10w[447..446])))))))));
	sft39a[].in = ( w1191w, ( w1191w, ( w_sum_node10w[133..133], ( w1191w, ( w_sum_node10w[99..99], ( w_sum_node10w[322..322], ( w_sum_node10w[289..289], ( w_sum_node10w[288..288], ( w_sum_node10w[287..286])))))))));
	sft3a[].in = ( w1159w, ( (! w_sum_node10w[543..543]), ( w_sum_node10w[542..542], ( (! w_sum_node10w[509..509]), ( w1159w, ( w_sum_node10w[539..539], ( w_sum_node10w[474..474], ( w_sum_node10w[473..473], ( w_sum_node10w[472..472], ( w_sum_node10w[439..439], ( w_sum_node10w[406..406], ( sft11a[47..47].out, ( sft11a[46..46].out, ( sft11a[45..45].out, ( sft11a[44..44].out, ( sft11a[43..43].out, ( sft11a[42..42].out, ( sft11a[41..41].out, ( sft11a[40..40].out, ( sft11a[39..39].out, ( sft11a[38..38].out, ( sft11a[37..37].out, ( sft11a[36..36].out, ( sft11a[35..35].out, ( sft11a[34..34].out, ( sft11a[33..33].out, ( sft11a[32..32].out, ( sft11a[31..31].out, ( sft11a[30..30].out, ( sft11a[29..29].out, ( sft11a[28..28].out, ( sft11a[27..27].out, ( sft11a[26..26].out, ( sft11a[25..25].out, ( sft11a[24..24].out, ( sft11a[23..23].out, ( sft11a[22..22].out, ( sft11a[21..21].out, ( sft11a[20..20].out, ( sft11a[19..19].out, ( sft11a[18..18].out, ( sft11a[17..17].out, ( sft11a[16..16].out, ( sft11a[15..15].out, ( sft11a[14..14].out, ( sft11a[13..13].out, ( sft11a[12..12].out, ( sft11a[11..11].out, ( sft11a[10..10].out, ( sft11a[9..9].out, ( sft11a[8..8].out, ( w_sum_node10w[13..13], ( w_sum_node10w[12..12], ( w_sum_node10w[11..11], ( w_sum_node10w[10..10], ( w_sum_node10w[9..9], ( w_sum_node10w[8..8], ( w_sum_node10w[7..7], ( w_sum_node10w[6..6], ( w_sum_node10w[5..5], ( w_sum_node10w[4..4], ( w_sum_node10w[3..2]))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));
	sft40a[].in = ( w1191w, ( w1191w, ( w_sum_node10w[517..517], ( w1191w, ( w_sum_node10w[323..323], ( w1191w, ( w_sum_node10w[481..481], ( w1191w, ( w1191w, w1191w)))))))));
	sft41a[].in = add37_result[];
	sft4a[].in = ( w1191w, ( w1191w, ( w1159w, ( w_sum_node10w[541..541], ( w_sum_node10w[540..540], ( w_sum_node10w[507..507], ( w_sum_node10w[506..506], ( sft11a[51..51].out, ( sft11a[50..50].out, ( sft11a[49..49].out, ( sft11a[48..48].out, ( sft16a[43..43].out, ( sft16a[42..42].out, ( sft16a[41..41].out, ( sft16a[40..40].out, ( sft16a[39..39].out, ( sft16a[38..38].out, ( sft16a[37..37].out, ( sft16a[36..36].out, ( sft16a[35..35].out, ( sft16a[34..34].out, ( sft16a[33..33].out, ( sft16a[32..32].out, ( sft16a[31..31].out, ( sft16a[30..30].out, ( sft16a[29..29].out, ( sft16a[28..28].out, ( sft16a[27..27].out, ( sft16a[26..26].out, ( sft16a[25..25].out, ( sft16a[24..24].out, ( sft16a[23..23].out, ( sft16a[22..22].out, ( sft16a[21..21].out, ( sft16a[20..20].out, ( sft16a[19..19].out, ( sft16a[18..18].out, ( sft16a[17..17].out, ( sft16a[16..16].out, ( sft16a[15..15].out, ( sft16a[14..14].out, ( sft16a[13..13].out, ( sft16a[12..12].out, ( sft16a[11..11].out, ( sft16a[10..10].out, ( sft16a[9..9].out, ( sft16a[8..8].out, ( sft16a[7..7].out, ( sft16a[6..6].out, ( sft16a[5..5].out, ( sft16a[4..4].out, ( sft11a[7..7].out, ( sft11a[6..6].out, ( sft11a[5..5].out, ( sft11a[4..4].out, ( w_sum_node10w[41..41], ( w_sum_node10w[40..40], ( w_sum_node10w[39..39], ( w_sum_node10w[38..38], ( w_sum_node10w[37..37], ( w_sum_node10w[36..36], ( w_sum_node10w[35..34]))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));
	sft5a[].in = ( w1191w, ( w1191w, ( w1191w, ( sft11a[55..55].out, ( sft11a[54..54].out, ( sft11a[53..53].out, ( sft11a[52..52].out, ( sft16a[47..47].out, ( sft16a[46..46].out, ( sft16a[45..45].out, ( sft16a[44..44].out, ( sft21a[39..39].out, ( sft21a[38..38].out, ( sft21a[37..37].out, ( sft21a[36..36].out, ( sft21a[35..35].out, ( sft21a[34..34].out, ( sft21a[33..33].out, ( sft21a[32..32].out, ( sft21a[31..31].out, ( sft21a[30..30].out, ( sft21a[29..29].out, ( sft21a[28..28].out, ( sft21a[27..27].out, ( sft21a[26..26].out, ( sft21a[25..25].out, ( sft21a[24..24].out, ( sft21a[23..23].out, ( sft21a[22..22].out, ( sft21a[21..21].out, ( sft21a[20..20].out, ( sft21a[19..19].out, ( sft21a[18..18].out, ( sft21a[17..17].out, ( sft21a[16..16].out, ( sft21a[15..15].out, ( sft21a[14..14].out, ( sft21a[13..13].out, ( sft21a[12..12].out, ( sft21a[11..11].out, ( sft21a[10..10].out, ( sft21a[9..9].out, ( sft21a[8..8].out, ( sft21a[7..7].out, ( sft21a[6..6].out, ( sft21a[5..5].out, ( sft21a[4..4].out, ( sft21a[3..3].out, ( sft21a[2..2].out, ( sft21a[1..1].out, ( sft21a[0..0].out, ( sft16a[3..3].out, ( sft16a[2..2].out, ( sft16a[1..1].out, ( sft16a[0..0].out, ( sft11a[3..3].out, ( sft11a[2..2].out, ( sft11a[1..1].out, ( sft11a[0..0].out, ( w_sum_node10w[69..69], ( w_sum_node10w[68..68], ( w1191w, w1191w))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));
	sft6a[].in = add2_result[];
	sft8a[].in = ( w1191w, ( w_sum_node10w[508..508], ( (! w_sum_node10w[475..475]), ( w1159w, ( w_sum_node10w[537..537], ( w_sum_node10w[536..536], ( w_sum_node10w[503..503], ( w_sum_node10w[502..502], ( w_sum_node10w[469..469], ( w_sum_node10w[468..468], ( w_sum_node10w[435..435], ( w_sum_node10w[434..434], ( w_sum_node10w[433..433], ( w_sum_node10w[432..432], ( w_sum_node10w[399..399], ( w_sum_node10w[366..366], ( w_sum_node10w[333..333], ( w_sum_node10w[332..332], ( w_sum_node10w[299..299], ( w_sum_node10w[298..298], ( w_sum_node10w[265..265], ( w_sum_node10w[264..264], ( w_sum_node10w[231..231], ( w_sum_node10w[230..230], ( w_sum_node10w[197..197], ( w_sum_node10w[196..196], ( w_sum_node10w[163..163], ( w_sum_node10w[162..162], ( w_sum_node10w[129..129], ( w_sum_node10w[128..128], ( w_sum_node10w[127..127], ( w_sum_node10w[126..126], ( w_sum_node10w[125..125], ( w_sum_node10w[124..124], ( w_sum_node10w[123..123], ( w_sum_node10w[122..122], ( w_sum_node10w[121..121], ( w_sum_node10w[120..120], ( w_sum_node10w[119..119], ( w_sum_node10w[118..118], ( w_sum_node10w[117..117], ( w_sum_node10w[116..116], ( w_sum_node10w[115..115], ( w_sum_node10w[114..114], ( w_sum_node10w[113..113], ( w_sum_node10w[112..112], ( w_sum_node10w[111..111], ( w_sum_node10w[110..110], ( w_sum_node10w[109..109], ( w_sum_node10w[108..108], ( w_sum_node10w[107..107], ( w_sum_node10w[106..106], ( w_sum_node10w[105..105], ( w_sum_node10w[104..104], ( w_sum_node10w[103..102])))))))))))))))))))))))))))))))))))))))))))))))))))))));
	sft9a[].in = ( w1191w, ( w1191w, ( w1191w, ( w_sum_node10w[538..538], ( w_sum_node10w[505..505], ( w_sum_node10w[504..504], ( w_sum_node10w[471..471], ( w_sum_node10w[470..470], ( w_sum_node10w[437..437], ( w_sum_node10w[436..436], ( w_sum_node10w[403..403], ( w_sum_node10w[402..402], ( w_sum_node10w[369..369], ( w_sum_node10w[368..368], ( w_sum_node10w[335..335], ( w_sum_node10w[334..334], ( w_sum_node10w[301..301], ( w_sum_node10w[300..300], ( w_sum_node10w[267..267], ( w_sum_node10w[266..266], ( w_sum_node10w[233..233], ( w_sum_node10w[232..232], ( w_sum_node10w[199..199], ( w_sum_node10w[198..198], ( w_sum_node10w[165..165], ( w_sum_node10w[164..164], ( w_sum_node10w[131..131], ( sft26a[16..16].out, ( sft26a[15..15].out, ( sft26a[14..14].out, ( sft26a[13..13].out, ( sft26a[12..12].out, ( w_sum_node10w[93..93], ( w_sum_node10w[92..92], ( w_sum_node10w[91..91], ( w_sum_node10w[90..90], ( w_sum_node10w[89..89], ( w_sum_node10w[88..88], ( w_sum_node10w[87..87], ( w_sum_node10w[86..86], ( w_sum_node10w[85..85], ( w_sum_node10w[84..84], ( w_sum_node10w[83..83], ( w_sum_node10w[82..82], ( w_sum_node10w[81..81], ( w_sum_node10w[80..80], ( w_sum_node10w[79..79], ( w_sum_node10w[78..78], ( w_sum_node10w[77..77], ( w_sum_node10w[76..76], ( w_sum_node10w[75..75], ( w_sum_node10w[74..74], ( w_sum_node10w[73..73], ( w_sum_node10w[72..72], ( w_sum_node10w[71..70])))))))))))))))))))))))))))))))))))))))))))))))))))))));
	dataa_node[] = ( dataa[31..0]);
	datab_node[] = ( datab[31..0]);
	final_result_node[] = ( w2342w[63..0]);
	result[] = ( final_result_node[63..32]);
	w1159w = B"1";
	w1191w = B"0";
	w2342w[] = ( sft6a[62..61].out, sft6a[60..59].out, sft6a[58..57].out, sft6a[56..55].out, sft6a[54..53].out, sft6a[52..51].out, sft6a[50..49].out, sft6a[48..47].out, sft6a[46..45].out, sft6a[44..43].out, sft6a[42..41].out, sft6a[40..39].out, sft6a[38..37].out, sft6a[36..35].out, sft6a[34..33].out, sft6a[32..31].out, sft6a[30..29].out, sft6a[28..27].out, sft6a[26..25].out, sft6a[24..23].out, sft6a[22..21].out, sft6a[20..19].out, sft6a[18..17].out, sft6a[16..15].out, sft6a[14..13].out, sft6a[12..11].out, sft6a[10..9].out, sft6a[8..7].out, sft6a[6..5].out, sft6a[4..3].out, sft6a[2..1].out, sft6a[0..0].out, w_sum_node10w[1..1], w_sum_node10w[0..0]);
	w_decoder_node9w[] = ( (( dataa_node[31..0]) & w_le_datab_node8w[31..31]), (( dataa_node[31..0]) & w_le_datab_node8w[30..30]), (( dataa_node[31..0]) & w_le_datab_node8w[29..29]), (( dataa_node[31..0]) & w_le_datab_node8w[28..28]), (( dataa_node[31..0]) & w_le_datab_node8w[27..27]), (( dataa_node[31..0]) & w_le_datab_node8w[26..26]), (( dataa_node[31..0]) & w_le_datab_node8w[25..25]), (( dataa_node[31..0]) & w_le_datab_node8w[24..24]), (( dataa_node[31..0]) & w_le_datab_node8w[23..23]), (( dataa_node[31..0]) & w_le_datab_node8w[22..22]), (( dataa_node[31..0]) & w_le_datab_node8w[21..21]), (( dataa_node[31..0]) & w_le_datab_node8w[20..20]), (( dataa_node[31..0]) & w_le_datab_node8w[19..19]), (( dataa_node[31..0]) & w_le_datab_node8w[18..18]), (( dataa_node[31..0]) & w_le_datab_node8w[17..17]), (( dataa_node[31..0]) & w_le_datab_node8w[16..16]), (( dataa_node[31..0]) & w_le_datab_node8w[15..15]), (( dataa_node[31..0]) & w_le_datab_node8w[14..14]), (( dataa_node[31..0]) & w_le_datab_node8w[13..13]), (( dataa_node[31..0]) & w_le_datab_node8w[12..12]), (( dataa_node[31..0]) & w_le_datab_node8w[11..11]), (( dataa_node[31..0]) & w_le_datab_node8w[10..10]), (( dataa_node[31..0]) & w_le_datab_node8w[9..9]), (( dataa_node[31..0]) & w_le_datab_node8w[8..8]), (( dataa_node[31..0]) & w_le_datab_node8w[7..7]), (( dataa_node[31..0]) & w_le_datab_node8w[6..6]), (( dataa_node[31..0]) & w_le_datab_node8w[5..5]), (( dataa_node[31..0]) & w_le_datab_node8w[4..4]), (( dataa_node[31..0]) & w_le_datab_node8w[3..3]), (( dataa_node[31..0]) & w_le_datab_node8w[2..2]), (( dataa_node[31..0]) & w_le_datab_node8w[1..1]), (( dataa_node[31..0]) & w_le_datab_node8w[0..0]));
	w_le_datab_node8w[] = ( datab_node[31..0]);
	w_sum_node10w[] = ( sum_adder1aa_15_result[], w_decoder_node9w[960..960], sum_adder1aa_14_result[], w_decoder_node9w[896..896], sum_adder1aa_13_result[], w_decoder_node9w[832..832], sum_adder1aa_12_result[], w_decoder_node9w[768..768], sum_adder1aa_11_result[], w_decoder_node9w[704..704], sum_adder1aa_10_result[], w_decoder_node9w[640..640], sum_adder1aa_9_result[], w_decoder_node9w[576..576], sum_adder1aa_8_result[], w_decoder_node9w[512..512], sum_adder1aa_7_result[], w_decoder_node9w[448..448], sum_adder1aa_6_result[], w_decoder_node9w[384..384], sum_adder1aa_5_result[], w_decoder_node9w[320..320], sum_adder1aa_4_result[], w_decoder_node9w[256..256], sum_adder1aa_3_result[], w_decoder_node9w[192..192], sum_adder1aa_2_result[], w_decoder_node9w[128..128], sum_adder1aa_1_result[], w_decoder_node9w[64..64], sum_adder1aa_0_result[], w_decoder_node9w[0..0]);
END;
--VALID FILE
